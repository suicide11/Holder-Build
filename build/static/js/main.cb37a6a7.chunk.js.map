{"version":3,"sources":["logo.svg","service/holder.js","component/molecule/holder.js","pages/home.js","pages/addholder.js","service/auth.js","component/molecule/register.js","component/molecule/login.js","pages/auth.js","pages/loader.js","App.js","serviceWorker.js","index.js","service/baseURL.js"],"names":["module","exports","AddHolderAPI","data","token","Promise","resolve","reject","axios","post","baseURL","headers","Authorization","then","a","response","GetHolderAPI","get","DeleteHolderAPI","id","delete","Cryptr","require","Holder","state","secret","unlocked","error","handleSecret","e","setState","target","value","handleSubmit","props","handleLoader","cryptr","decrypt","body","handleDelete","_id","this","updateHolder","bind","className","title","encrypt","onChange","style","width","placeholder","onClick","type","color","DeleteFilled","cursor","createdAt","Component","Home","holder","height","length","map","val","addHolder","PlusOutlined","AddHolder","onFinish","values","console","log","key","onFinishFailed","errorInfo","fontSize","name","initialValues","onValuesChange","Item","rules","required","message","valuePropName","htmlType","RegisterAPI","method","url","LoginAPI","Register","chrome","storage","sync","set","handleToken","textAlign","remember","Password","Login","Auth","noTitleKey","onTabChange","contentListNoTitle","login","register","tabList","tab","activeTabKey","React","Loader","tip","App","loader","items","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.cb37a6a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","/*global chrome*/\nimport axios from 'axios'\nimport { baseURL } from './baseURL'\n\nconst AddHolderAPI = (data, token) => {\n    return new Promise(function (resolve, reject) {\n        axios.post( \n            baseURL+'holder/add',\n            data,\n            {headers: { Authorization: `Bearer ${token}` }}\n          )\n            .then(async function (response) {\n                resolve(response)\n            })\n\n    })\n\n}\n\nconst GetHolderAPI = ( token) => {\n    return new Promise(function (resolve, reject) {\n        axios.get( \n            baseURL+'holder',\n            {headers: { Authorization: `Bearer ${token}` }}\n          )\n            .then(async function (response) {\n                resolve(response)\n            })\n    })\n}\n\nconst DeleteHolderAPI = (id, token) => {\n    return new Promise(function (resolve, reject) {\n        axios.delete( \n            baseURL+'holder/'+id,\n            {headers: { Authorization: `Bearer ${token}` }}\n          )\n            .then(async function (response) {\n                resolve(response)\n            })\n    })\n}\n\nexport { AddHolderAPI, GetHolderAPI, DeleteHolderAPI }","import React, { Component } from 'react';\nimport './holder.css'\nimport { Input, Button } from 'antd';\nimport {DeleteHolderAPI} from '../../service/holder'\nimport { DeleteFilled  } from '@ant-design/icons';\nconst Cryptr = require('cryptr');\nclass Holder extends Component {\n    state={\n        secret:\"\",\n        unlocked:false,\n        error:false\n    }\n    handleSecret = e => {\n        this.setState({\n            secret:e.target.value\n        })\n    }\n    handleSubmit = async e =>{\n        this.props.handleLoader(true)\n        const cryptr = new Cryptr(this.state.secret);\n        let data = await cryptr.decrypt(this.props.data.body)\n        if(data) {\n            this.setState({\n                unlocked:data\n            })\n            this.props.handleLoader(false)\n        }\n        else{\n            this.setState({\n                error:\"bad key\"\n            })\n        }\n    }\n    handleDelete =() =>{\n        this.props.handleLoader(true)\n        DeleteHolderAPI(this.props.data._id,this.props.token).then(function(response){\n            this.props.updateHolder(this.props.token)\n            this.props.handleLoader(false)\n        }.bind(this))\n    }\n    render() {\n        return (\n            <div className=\"holder\">\n                <div className=\"heading-holder\" >\n                    {this.props.data.title}\n                </div>\n                <center>\n                    {!this.props.data.encrypt && <div className=\"body-holder\">\n                        {this.props.data.body}\n                    </div>}\n                    {this.state.unlocked && <div className=\"body-holder\">\n                        {this.state.unlocked}\n                    </div>}\n                    {this.props.data.encrypt && !this.state.unlocked && \n                        <>\n                        <Input onChange={this.handleSecret} style={{width:\"60%\"}} placeholder=\"Enter the secret\" />\n                        <Button onClick={this.handleSubmit} type=\"primary\">submit</Button>\n                        <br/>\n                        </>\n                    }\n                    {\n                        this.state.error && <b style={{color:\"red\"}}>{this.state.error}</b>\n                    }\n                    <br></br>\n                    {(this.state.unlocked || !this.props.data.encrypt ) && \n                    <DeleteFilled onClick={()=>this.handleDelete()} style={{color:\"red\", cursor:\"pointer\"}} />}\n                </center>\n                <div className=\"footer-holder\">\n                    {this.props.data.createdAt}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Holder","import React, { Component } from 'react';\nimport Holder from '../component/molecule/holder'\nimport {PlusOutlined} from '@ant-design/icons';\nimport './home.css'\nimport {GetHolderAPI} from '../service/holder'\nclass Home extends Component {\n    state={\n        data:[]\n    }\n    componentDidMount() {\n        this.props.handleLoader(true)\n        GetHolderAPI(this.props.token).then((response)=>{\n            this.setState({\n                data:response.data.holder\n            })\n            this.props.handleLoader(false)\n        })\n    }\n    updateHolder = (token)=>{\n        this.props.handleLoader(true)\n        GetHolderAPI(this.props.token).then((response)=>{\n            this.setState({\n                data:response.data.holder\n            })\n            this.props.handleLoader(false)\n        })\n    }\n    render() {\n        return (\n            <div style={{height:\"100%\"}}>\n                <div className=\"home-body\" style={{ width: \"100%\" }} >\n                    {this.state.data.length>0 ? (\n                        this.state.data.map(val=>\n                            <Holder handleLoader={this.props.handleLoader} updateHolder={this.updateHolder} data={val} token={this.props.token}/>\n                            )\n                    ):(\n                        <b> No Holders yet </b>\n                    ) }\n                </div>\n                <div className=\"home-footer\">\n                    <button onClick={()=>this.props.addHolder(true)}>\n                        <PlusOutlined></PlusOutlined>\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home","import React, { Component } from 'react'\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport './addholder.css'\nimport {AddHolderAPI} from \"../service/holder\";\nconst Cryptr = require('cryptr');\nclass AddHolder extends Component {\n    state = {\n        encrypt : false\n    }\n    onFinish = async values => {\n        await this.props.handleLoader(true)\n        console.log('Success:', values);\n        if(values.encrypt == true) {\n            const cryptr = new Cryptr(values.key);\n            let data = await cryptr.encrypt(values.body)\n            values.body = data\n            // alert(this.props.token)\n            AddHolderAPI(values, this.props.token).then(function(response){\n                console.log(response)\n                this.props.addHolder(false)\n                this.props.handleLoader(false)\n            }.bind(this))\n        }\n        else {\n            AddHolderAPI(values, this.props.token).then(function(response){\n                console.log(response)\n                this.props.addHolder(false)\n                this.props.handleLoader(false)\n            }.bind(this))\n        }\n    };\n\n    onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n    onChange = data =>{\n        if(data.encrypt == true) {\n            this.setState({\n                encrypt : true\n            })\n        }\n        if(data.encrypt == false) {\n            this.setState({\n                encrypt : false\n            })\n        }\n    }\n    render() {\n        return (\n            <div className=\"addholderBody\">\n                <h6 style={{fontSize:\"16px\"}}>Add holder</h6>\n                <hr/>\n                <Form\n                    // {...layout}\n                    name=\"basic\"\n                    initialValues={{ encrypt:false }}\n                    onFinish={this.onFinish}\n                    onValuesChange={this.onChange}\n                    onFinishFailed={this.onFinishFailed}\n                >\n                    <Form.Item\n                        // label=\"Title\"\n                        name=\"title\"\n                        rules={[{ required: true, message: 'Please enter the title' }]}\n                    >\n                        <Input placeholder=\"Title\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        // label=\"Body\"\n                        name=\"body\"\n                        rules={[{ required: true, message: 'Please enter body' }]}\n                    >\n                        <Input placeholder=\"Body\" />\n                    </Form.Item>\n                    <b style={{fontSize:\"10px\", color:\"red\"}}>\n                        For sensitive data we recommend you to save data in encrypted format.\n                    </b>\n                    <Form.Item  name=\"encrypt\" valuePropName=\"checked\">\n                        <Checkbox>Encrypt</Checkbox>\n                    </Form.Item>\n                    {this.state.encrypt && <Form.Item\n                        // label=\"key\"\n                        name=\"key\"\n                        rules={[{ required: true, message: 'Please enter body' }]}\n                    >\n                        <Input placeholder=\"Encryption Key\" />\n                    </Form.Item>}\n                    <Form.Item >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                        &nbsp;\n                        <Button onClick={()=>this.props.addHolder(false)} type=\"primary\" >\n                            Cancel\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default AddHolder","import axios from 'axios'\nimport {baseURL} from './baseURL'\nconst RegisterAPI = (data) => {\n  return new Promise(function (resolve, reject) {\n    axios({\n      method: 'post',\n      data: data,\n      url: baseURL + 'auth/signup',\n    })\n      .then(async function (response) {\n        console.log(response)\n        resolve(response)\n      })\n\n  })\n\n}\n\nconst LoginAPI = (data) => {\n    return new Promise(function (resolve, reject) {\n      axios({\n        method: 'post',\n        data: data,\n        url: baseURL + 'auth/signin',\n      })\n        .then(async function (response) {\n          console.log(response)\n          resolve(response)\n        })\n  \n    })\n  \n  }\nexport {RegisterAPI, LoginAPI}","/*global chrome*/\nimport React,{Component} from 'react' \nimport { Form, Input, Button, Checkbox } from 'antd';\nimport {RegisterAPI} from '../../service/auth' \nclass Register extends Component {\n    onFinish = async values => {\n        console.log('Success:', values);\n        RegisterAPI(values).then((response)=>{\n            console.log(response)\n            chrome.storage.sync.set({'token': response.data.token}, function() {\n                console.log('Settings saved');\n            });\n            this.props.handleToken(response.data.token)\n        })\n    };\n\n    onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n    render() {\n        return(\n            <div style={{textAlign:\"center\"}} >\n                <Form\n                    // {...layout}\n                    name=\"basic\"\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}\n                    onValuesChange={this.onChange}\n                    onFinishFailed={this.onFinishFailed}\n                >\n                    <Form.Item\n                        // label=\"Title\"\n                        name=\"name\"\n                        rules={[{ required: true, message: 'Please enter name' }]}\n                    >\n                        <Input placeholder=\"Name\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        // label=\"Body\"\n                        name=\"email\"\n                        rules={[{ required: true, type:\"email\", message: 'Please enter emai;l' }]}\n                    >\n                        <Input placeholder=\"Email\" />\n                    </Form.Item>\n                    <Form.Item\n                        // label=\"Title\"\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Please enter password' }]}\n                    >\n                        <Input.Password placeholder=\"Password\" />\n                    </Form.Item>                \n                    <Form.Item >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n\n                    </Form.Item>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default Register","/*global chrome*/\nimport React,{Component} from 'react' \nimport { Form, Input, Button, Checkbox } from 'antd';\nimport {LoginAPI} from '../../service/auth'\nclass Login extends Component {\n    state ={\n        token:\"hello\"\n    }\n    onFinish = async values => {\n        console.log('Success:', values);\n        await LoginAPI(values).then((response)=>{\n            console.log(response)\n            chrome.storage.sync.set({'token': response.data.token}, function() {\n                console.log('Settings saved');\n            });\n            this.props.handleToken(response.data.token)\n        })\n\n    };\n\n    onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n    render() {\n        return(\n            <div style={{textAlign:\"center\"}} >\n                <Form\n                    // {...layout}\n                    name=\"basic\"\n                    initialValues={{ remember: true }}\n                    onFinish={this.onFinish}\n                    onValuesChange={this.onChange}\n                    onFinishFailed={this.onFinishFailed}\n                >\n                    \n\n                    <Form.Item\n                        // label=\"Body\"\n                        name=\"email\"\n                        rules={[{ required: true, type:\"email\", message: 'Please enter emai;l' }]}\n                    >\n                        <Input placeholder=\"Email\" />\n                    </Form.Item>\n                    <Form.Item\n                        // label=\"Title\"\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Please enter password' }]}\n                    >\n                        <Input.Password placeholder=\"Password\" />\n                    </Form.Item>                \n                    <Form.Item >\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default Login","import React,{Component} from 'react' \nimport { Card } from 'antd';\nimport Register from '../component/molecule/register'\nimport Login from '../component/molecule/login'\n\n\nclass Auth extends React.Component {\n    state = {\n      key: 'login',\n      noTitleKey: 'login',\n    };\n  \n    onTabChange = (key, type) => {\n      console.log(key, type);\n      this.setState({ [type]: key });\n    };\n  \n    render() {\n      const tabListNoTitle = [\n        {\n          key: 'login',\n          tab: 'Login',\n        },\n        {\n          key: 'register',\n          tab: 'Register',\n        },\n      ];\n      \n      const contentListNoTitle = {\n        login: <div><Login handleLoader={this.props.handleLoader} handleToken={this.props.handleToken} /></div>,\n        register: <Register handleLoader={this.props.handleLoader}  handleToken={this.props.handleToken}/>,\n      \n      };\n      \n      return (\n        <div>\n          <Card\n            style={{ width: '100%' }}\n            tabList={tabListNoTitle}\n            activeTabKey={this.state.noTitleKey}\n            onTabChange={key => {\n              this.onTabChange(key, 'noTitleKey');\n            }}\n          >\n            {contentListNoTitle[this.state.noTitleKey]}\n          </Card>\n        </div>\n      );\n    }\n  }\n\nexport default Auth","import React from 'react'\nimport { Spin } from 'antd'\nfunction Loader() {\n    return (\n        <div className=\"loading\">\n            <Spin tip=\"Loading...\">\n            </Spin>\n        </div>\n    )\n}\n\nexport default Loader","/*global chrome*/\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'antd/dist/antd.css'\nimport Home from './pages/home'\nimport AddHolder from './pages/addholder'\nimport Auth from './pages/auth'\nimport Loader from './pages/loader'\nclass App extends Component {\n  state = {\n    token: false,\n    addHolder: false,\n    loader: false\n  }\n  componentDidMount() {\n\n    chrome.storage.sync.get(['token'], function (items) {\n      if (items) {\n        this.setState({\n          token: items.token\n        })\n      }\n    }.bind(this));\n\n    \n  }\n\n  addHolder = (data) => {\n    this.setState({\n      addHolder: data\n    })\n  }\n  handleToken=(data)=>{\n    this.setState({\n      token:data\n    })\n  }\n\n  handleLoader = (data)=>{\n    this.setState({\n      loader:data\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"application-body\">\n        {this.state.loader && <Loader></Loader>}\n        {this.state.token && !this.state.addHolder && <Home handleLoader={this.handleLoader} addHolder={this.addHolder} token={this.state.token} />}\n        {this.state.addHolder && <AddHolder handleLoader={this.handleLoader} addHolder={this.addHolder} token={this.state.token} />}\n        {!this.state.token && <Auth handleLoader={this.handleLoader} handleToken={this.handleToken} />}\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","exports.baseURL = \"http://52.66.184.246:8000/api/v1/\""],"sourceRoot":""}